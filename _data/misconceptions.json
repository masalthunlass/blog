[
  {
    "sentence": "C'est juste un bouton !",
    "said_by": "un-e fonctionnel-le",
    "counterarguments": [
      {
        "answer": "La complexité est cachée",
        "source": "https://www.followtribes.io/developpement-produit-saas/"
      }
    ]
  },
  {
    "said_by": "un-e développeur-se",
    "sentence": "Si çà concerne le métier, ça ne m'interesse pas",
    "counterarguments": [
      {
        "answer": "Une mauvaise modélisation du domaine représente une faille de sécurité (secure by design)",
        "source": "https://www.youtube.com/watch?v=BpMzn9AxNcw"
      }
    ]
  },
  {
    "said_by": "un-e décisionnaire",
    "sentence": "Pour aller plus vite, il faut mettre plus de devs",
    "counterarguments": [
      {
        "answer": "La programmation est une tâche qui nécessite de la communication et ne peut pas être partitionnée simplement",
        "source": "https://en.wikipedia.org/wiki/The_Mythical_Man-Month#The_mythical_man-month"
      },
      {
        "answer": "Pour aller plus vite, il faut réduire la taille de l'en-cours (loi de little) ",
        "source": "https://www.youtube.com/watch?v=0J5kN9gCoXg"
      }
    ]
  },
  {
    "said_by": "un-e dev sénior",
    "sentence": "J'ai 12 ans d'experience, toi 4 donc tais toi !",
    "counterarguments": [
      {
        "answer": "Peu importe le niveau de karaté que tu as, un-e autre en saura plus",
        "source": "https://blog.codinghorror.com/the-ten-commandments-of-egoless-programming/"
      }
    ]
  },
  {
    "said_by": "un-e non-dev",
    "sentence": "La programmation c'est pour les scientifiques",
    "counterarguments": [
      {
        "answer": "Selon une étude de Prat, l'aptitude linguistique est le meilleur facteur prédictif des capacités en programmation d'une personne. (cf fig. 3)",
        "source": "https://www.nature.com/articles/s41598-020-60661-8.pdf"
      }
    ]
  },
  {
    "said_by": "un-e non dev",
    "sentence": "Les devs sont silencieux car ils sont dans leur monde.",
    "counterarguments": [
      {
        "answer": "La programmation nécessite une phase de chauffe. En effet, lors d'une interruption, il faut environ un quart d'heure pour recommencer à modifier le code. Les résultats d'une étude de Parnin montrent que les programmeurs doivent déployer des efforts délibérés pour reconstruire le contexte avant de poursuivre leur travail. (partie 11.2.2, the programmer's brain, F. Hermans)",
        "source": "https://www.manning.com/books/the-programmers-brain"
      }
    ]
  },
  {
    "said_by": "un-e dev",
    "sentence": "Normalement c'est fini demain",
    "counterarguments": [
      {
        "answer": "Si la problématique a un contexte complexe, il n'y a pas de prédictibilité (Cynefin)",
        "source": "https://medium.com/@bartlettstarman/une-introduction-%C3%A0-cynefin-f0962c63f21e "
      }
    ]
  },
  {
    "said_by": "une partie prenante",
    "sentence": "Sans la qualité, on aurait livré plus vite.",
    "counterarguments": [
      {
        "answer": "Modifier un logiciel de bonne qualité est plus facile et donc plus rapide",
        "source": "https://www.martinfowler.com/articles/is-quality-worth-cost.html#AtFirstGlanceInternalQualityDoesNotMatterToCustomers\n"
      }
    ]
  }
]